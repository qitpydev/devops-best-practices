name: Deploy to On-Premise Server

on:
  push:
    branches:
      - develop
      - init-ci-*

env:
  HARBOR_REGISTRY: https://harbor.yourdomain.com
  HARBOR_USERNAME: qitpydev
  HARBOR_PASSWORD: ${{ secrets.HARBOR_PASSWORD }}
  HARBOR_REPOSITORY: some-repo
  HARBOR_PROJECT: some-project

  CONTAINER_NAME: some-name
  CONTAINER_PORT: 3454
  TARGET_PORT: 3000

  TAG: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file from .env_example and replace values manually
        run: |
          cp .env.example .env
          # Replace values in the .env file with secrets
          sed -i 's|^ENV1=.*|ENV1=${{ secrets.ENV1 }}|' .env
          sed -i 's|^ENV2=.*|ENV2=${{ secrets.ENV2 }}|' .env
          sed -i 's|^ENV3=.*|ENV3=${{ secrets.ENV3 }}|' .env
        shell: bash

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Harbor
        run: echo "${{ env.HARBOR_PASSWORD }}" | docker login -u "${{ env.HARBOR_USERNAME }}" --password-stdin "${{ env.HARBOR_REGISTRY }}"

      - name: Build Docker image
        run: docker build -t ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ env.HARBOR_REPOSITORY }}:${{ env.TAG }} .

      - name: Push Docker image
        run: docker push ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ env.HARBOR_REPOSITORY }}:${{ env.TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Rollout Update
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            echo "${{ env.HARBOR_PASSWORD }}" | docker login -u "${{ env.HARBOR_USERNAME }}" --password-stdin "${{ env.HARBOR_REGISTRY }}"
            docker pull ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ env.HARBOR_REPOSITORY }}:${{ env.TAG }}
            docker stop ${{ env.CONTAINER_NAME }}
            docker rm ${{ env.CONTAINER_NAME }}
            docker run -d --name ${{ env.CONTAINER_NAME }} -p ${{ env.TARGET_PORT }}:${{ env.CONTAINER_PORT }} ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ env.HARBOR_REPOSITORY }}:${{ env.TAG }}
